policy_module(gravity, 6.0.0)

gen_require(`
  attribute systemd_unit_file_type;
  type setfiles_t;
  type container_file_t;
  type container_log_t;
  type container_share_t;
  type container_var_run_t;
  type container_runtime_tmpfs_t;
  type spc_t;
')

####################################
#
# Declarations
#

attribute_role gravity_roles;
attribute_role gravity_container_roles;

# attribute to share between gravity domains (cluster vs installer)
attribute gravity_domain;
# attribute for processes runing inside the planet container
attribute gravity_container_domain;
# attribute for all gravity binaries
attribute gravity_executable_domain;

# gravity domains
type gravity_t, gravity_domain;
type gravity_installer_t, gravity_domain;
type gravity_exec_t, gravity_executable_domain;
type gravity_installer_exec_t, gravity_executable_domain;
init_daemon_domain(gravity_t, gravity_exec_t)
init_daemon_domain(gravity_installer_t, gravity_installer_exec_t)
can_exec(gravity_domain, gravity_exec_t)
can_exec(gravity_domain, gravity_installer_exec_t)
can_exec(gravity_domain, gravity_container_file_t)
role gravity_roles types gravity_domain;

# state directory
type gravity_home_t;
files_type(gravity_home_t)

# log files
type gravity_log_t;
logging_log_file(gravity_log_t)

# temporary files/directories
type gravity_tmp_t;
files_tmp_file(gravity_tmp_t)

# socket files
type gravity_var_run_t;
files_pid_file(gravity_var_run_t)

# systemd unit files (services)
type gravity_unit_file_t;
systemd_unit_file(gravity_unit_file_t)

# network ports
attribute gravity_port_type;
type gravity_port_t, gravity_port_type;
type gravity_install_port_t, gravity_port_type;
type gravity_vxlan_port_t, gravity_port_type;
type gravity_docker_port_t, gravity_port_type;
type gravity_kubernetes_port_t, gravity_port_type;
corenet_port(gravity_port_t)
corenet_port(gravity_install_port_t)
corenet_port(gravity_vxlan_port_t)
corenet_port(gravity_docker_port_t)
corenet_port(gravity_kubernetes_port_t)

#####################################
#
# Planet
#

container_runtime_domain_template(gravity_container_runtime)
type gravity_container_runtime_exec_t, gravity_executable_domain;
init_daemon_domain(gravity_container_runtime_t, gravity_container_runtime_exec_t)
can_exec(gravity_container_runtime_t, gravity_container_runtime_exec_t)
can_exec(gravity_container_runtime_t, gravity_container_file_t)
can_exec(gravity_container_runtime_t, gravity_service_exec_t)
can_exec(gravity_container_runtime_t, gravity_container_init_exec_t)
can_exec(gravity_container_runtime_t, gravity_kubernetes_exec_t)
role gravity_container_roles types gravity_container_runtime_t;

type gravity_container_home_t;
files_type(gravity_container_home_t)
ubac_constrained(gravity_home_t)

# socket files
type gravity_container_var_run_t;
files_pid_file(gravity_container_var_run_t)

# init process
type gravity_container_init_exec_t, gravity_executable_domain;
gravity_system_container_domain_template(gravity_container_init)
typeattribute gravity_container_init_t gravity_container_domain;
init_daemon_domain(gravity_container_init_t, gravity_container_init_exec_t)
can_exec(gravity_container_init_t, gravity_container_init_exec_t)

type gravity_container_systemctl_exec_t, gravity_executable_domain;
gravity_system_container_domain_template(gravity_container_systemctl)
typeattribute gravity_container_systemctl_t gravity_container_domain;
init_daemon_domain(gravity_container_systemctl_t, gravity_container_systemctl_exec_t)
can_exec(gravity_container_systemctl_t, gravity_container_systemctl_exec_t)

# kubernetes control plane components
type gravity_kubernetes_exec_t, gravity_executable_domain;
gravity_system_container_domain_template(gravity_kubernetes)
typeattribute gravity_kubernetes_t gravity_container_domain;
init_daemon_domain(gravity_kubernetes_t, gravity_kubernetes_exec_t)
can_exec(gravity_kubernetes_t, gravity_kubernetes_exec_t)
can_exec(gravity_kubernetes_t container_runtime_exec_t)
allow gravity_kubernetes_t container_t:process sigkill;

# cluster services
type gravity_service_exec_t, gravity_executable_domain;
gravity_system_container_domain_template(gravity_service)
typeattribute gravity_service_t gravity_container_domain;
init_daemon_domain(gravity_service_t, gravity_service_exec_t)
can_exec(gravity_service_t, gravity_service_exec_t)
can_exec(gravity_service_t, gravity_container_file_t)

# domain for all not otherwise labeled processes running inside the container
gravity_container_domain_template(gravity_container)
typeattribute gravity_container_t gravity_container_domain;

# domain for system container purposes (i.e. application init container)
gravity_container_domain_template(gravity_container_system)
typeattribute gravity_container_system_t gravity_container_domain;
can_exec(gravity_container_system_t, gravity_exec_t)

# domain for gravity logging component
gravity_container_domain_template(gravity_container_logger)
typeattribute gravity_container_logger_t gravity_container_domain;

type gravity_container_logger_home_t;
files_type(gravity_container_logger_home_t)

type gravity_container_file_t;
files_mountpoint(gravity_container_file_t)
files_associate_rootfs(gravity_container_file_t)
domain_entry_file(gravity_container_t, gravity_container_file_t)

role gravity_roles types gravity_container_runtime_t;

####################################
#
# Local policy
#

admin_pattern(gravity_domain, gravity_home_t)
admin_pattern(gravity_domain, gravity_container_logger_home_t)
admin_pattern(gravity_domain, gravity_tmp_t)
admin_pattern(gravity_domain, gravity_container_home_t)
admin_pattern(gravity_domain, gravity_container_file_t)
manage_files_pattern(gravity_domain, gravity_log_t, gravity_log_t)
manage_chr_files_pattern(gravity_domain, gravity_container_file_t, gravity_container_file_t)
manage_blk_files_pattern(gravity_domain, gravity_container_file_t, gravity_container_file_t)

admin_pattern(gravity_container_logger_t, gravity_container_logger_home_t)
gravity_read_state_files(gravity_container_logger_t)
gravity_manage_state_files(gravity_container_system_t)
gravity_manage_state_dirs(gravity_container_system_t)
domtrans_pattern(gravity_container_system_t, gravity_kubernetes_exec_t, gravity_kubernetes_t)
#FIXME
#allow gravity_container_logger_t gravity_home_t:dir read;
container_read_lib_files(gravity_container_logger_t)

corecmd_exec_bin(gravity_domain)
corecmd_bin_entry_type(gravity_domain)
corecmd_exec_shell(gravity_domain)
corecmd_shell_entry_type(gravity_domain)
mount_domtrans(gravity_domain)
seutil_domtrans_setfiles(gravity_domain)
seutil_domtrans_semanage(gravity_domain)
container_runtime_domtrans(gravity_domain)

allow gravity_domain self:fifo_file rw_fifo_file_perms;
allow gravity_domain self:process { setrlimit setpgid ptrace setsched setkeycreate setexec };
allow gravity_domain self:tcp_socket create_socket_perms;
allow gravity_domain self:tcp_socket create_stream_socket_perms;
allow gravity_domain self:unix_dgram_socket { connect create getattr setopt };

allow gravity_domain gravity_container_init_exec_t:lnk_file { manage_lnk_file_perms };
allow gravity_domain gravity_container_init_exec_t:file { manage_file_perms };
allow gravity_domain gravity_container_runtime_exec_t:lnk_file { manage_lnk_file_perms };
allow gravity_domain gravity_container_runtime_exec_t:file { manage_file_perms };
allow gravity_domain gravity_container_t:lnk_file { manage_lnk_file_perms };
allow gravity_domain gravity_container_t:file { manage_file_perms };
allow gravity_domain gravity_service_exec_t:lnk_file { manage_lnk_file_perms };
allow gravity_domain gravity_service_exec_t:file { manage_file_perms };
allow gravity_domain gravity_kubernetes_exec_t:lnk_file { manage_lnk_file_perms };
allow gravity_domain gravity_kubernetes_exec_t:file { manage_file_perms };

# lsblk access /sys/dev/block
dev_read_sysfs(gravity_domain)
auth_read_passwd(gravity_domain)

# FIXME: enable when the list of directories is settled
#files_dontaudit_search_all_dirs(gravity_domain)

# allow to statfs the state directory
fs_getattr_xattr_fs(gravity_domain)
# read/write to $TMPDIR
files_manage_generic_tmp_files(gravity_domain)
domain_use_interactive_fds(gravity_domain)

sysnet_dns_name_resolve(gravity_domain)
gravity_container_stream_connect(gravity_domain)

container_manage_lib_files(gravity_domain)
container_manage_lib_dirs(gravity_domain)
container_manage_share_files(gravity_domain)
container_manage_share_dirs(gravity_domain)
container_manage_log_files(gravity_domain)
container_manage_files(gravity_domain)
container_manage_dirs(gravity_domain)
fs_getattr_all_fs(gravity_domain)
fs_mount_all_fs(gravity_domain)
fs_unmount_all_fs(gravity_domain)
fs_remount_all_fs(gravity_domain)

files_tmp_filetrans(gravity_domain, gravity_tmp_t, { file dir lnk_file sock_file })

# installer directory transitions
userdom_user_home_content_filetrans(gravity_domain, gravity_home_t, dir, ".gravity")
userdom_user_home_content_filetrans(gravity_domain, gravity_home_t, file)
userdom_user_home_content_filetrans(gravity_domain, gravity_exec_t, file, "gravity")
userdom_user_home_content_filetrans(gravity_domain, gravity_log_t, file, "gravity-system.log")
userdom_user_home_content_filetrans(gravity_domain, gravity_log_t, file, "gravity-install.log")
gravity_home_content_filetrans(gravity_domain, gravity_unit_file_t, file, "gravity-installer.service")
gravity_home_content_filetrans(gravity_domain, gravity_unit_file_t, file, "gravity-agent.service")
gravity_home_content_filetrans(gravity_domain, gravity_var_run_t, sock_file, "installer.sock")

files_var_lib_filetrans(gravity_domain, gravity_home_t, dir, "gravity")
logging_log_filetrans(gravity_domain, gravity_log_t, file)
filetrans_pattern(gravity_domain, gravity_container_home_t, container_var_lib_t, dir, "registry")
filetrans_pattern(gravity_domain, gravity_container_home_t, container_var_lib_t, dir, "docker")
filetrans_pattern(gravity_domain, gravity_container_home_t, gravity_container_runtime_exec_t, file, "planet")
filetrans_pattern(gravity_domain, gravity_container_home_t, gravity_exec_t, file, "gravity")
systemd_unit_file_filetrans(gravity_domain, gravity_unit_file_t, { file lnk_file })
manage_sock_files_pattern(gravity_domain, gravity_var_run_t, gravity_var_run_t)

manage_files_pattern(gravity_domain, gravity_unit_file_t, gravity_unit_file_t)
manage_lnk_files_pattern(gravity_domain, gravity_unit_file_t, gravity_unit_file_t)
allow gravity_domain gravity_unit_file_t:service { manage_service_perms };
allow gravity_container_runtime_t gravity_unit_file_t:file { rw_file_perms };
allow gravity_container_runtime_t gravity_unit_file_t:service { manage_service_perms };

# mkdir /var/run/planet/XXX
files_pid_filetrans(gravity_domain, container_var_run_t, dir, "planet")
# FIXME: mkdir /var/run/planet
init_create_pid_dirs(gravity_domain)

files_pid_filetrans(gravity_domain, container_var_run_t, sock_file, "planet.socket")
create_dirs_pattern(gravity_domain, container_var_run_t, container_var_run_t)
delete_dirs_pattern(gravity_domain, container_var_run_t, container_var_run_t)
setattr_dirs_pattern(gravity_domain, container_var_run_t, container_var_run_t)
manage_files_pattern(gravity_domain, container_var_run_t, container_var_run_t)
# /root/.gravity
userdom_admin_home_dir_filetrans(gravity_domain, gravity_home_t, dir, ".gravity")
# /usr/local/share/gravity
filetrans_pattern(gravity_domain, usr_t, gravity_home_t, dir, "gravity")

allow gravity_domain container_var_run_t:sock_file { create unlink };
allow gravity_domain container_var_run_t:fifo_file { create setattr unlink };
allow gravity_domain container_var_run_t:file mounton;

# execute files inside /var/lib/gravity
allow gravity_domain gravity_home_t:file entrypoint;
exec_files_pattern(gravity_domain, gravity_home_t, gravity_home_t)
# execute files inside planet rootfs
allow gravity_domain gravity_container_file_t:file entrypoint;
exec_files_pattern(gravity_domain, gravity_container_file_t, gravity_container_file_t)

systemd_exec_systemctl(gravity_domain)
dontaudit gravity_installer_t self:capability net_admin;
systemd_create_unit_file_lnk(gravity_domain)
init_reload_services(gravity_domain)
init_status(gravity_domain)
systemd_read_unit_files(gravity_domain)
systemd_search_unit_dirs(gravity_domain)
systemd_getattr_unit_dirs(gravity_domain)
systemd_getattr_unit_files(gravity_domain)

# allow bind/rw on kubernetes ports
corenet_tcp_bind_generic_node(gravity_domain)
corenet_udp_bind_generic_node(gravity_domain)
# allow to connect to AWS metadata endpoint
corenet_tcp_connect_http_port(gravity_domain)
corenet_tcp_connect_http_port(gravity_container_runtime_t)
corenet_tcp_bind_generic_node(gravity_container_runtime_t)
corenet_udp_bind_generic_node(gravity_container_runtime_t)
allow gravity_domain gravity_port_type:tcp_socket { connect name_connect };
allow gravity_domain gravity_port_type:udp_socket { connect };
allow gravity_container_runtime_t gravity_port_type:tcp_socket { connect name_connect };
allow gravity_container_runtime_t gravity_port_type:udp_socket { connect };

optional_policy(`
  corenet_tcp_bind_kubernetes_port(gravity_domain)
  corenet_tcp_connect_kubernetes_port(gravity_domain)
  corenet_tcp_sendrecv_kubernetes_port(gravity_domain)
  # allow bind/connect/recv on port 5000 (bind is used during preflight checks)
  corenet_tcp_bind_commplex_main_port(gravity_domain)
  corenet_tcp_connect_commplex_main_port(gravity_domain)
  corenet_tcp_sendrecv_commplex_main_port(gravity_domain)
  # allow bind/rw on port 7001
  corenet_tcp_bind_afs3_callback_port(gravity_domain)
  corenet_tcp_connect_afs3_callback_port(gravity_domain)
  corenet_tcp_sendrecv_afs3_callback_port(gravity_domain)
')

allow gravity_domain gravity_install_port_t:tcp_socket { listen name_bind };
allow gravity_domain gravity_port_t:tcp_socket { listen name_bind };

# execute ifconfig and access network configuration
sysnet_domtrans_ifconfig(gravity_domain)
iptables_domtrans(gravity_domain)
# FIXME: remove me
#modutils_exec_insmod(gravity_domain)
optional_policy(`
  modutils_domtrans_insmod(gravity_domain)
')
usermanage_domtrans_groupadd(gravity_domain)
usermanage_domtrans_useradd(gravity_domain)
journalctl_domtrans(gravity_domain)
container_runtime_domtrans(gravity_domain)
dmesg_domtrans(gravity_domain)
gravity_container_runtime_domtrans(gravity_domain)
# cannot use a named transition as the binary is created by
# first creating a file with a random name and then renaming it to gravity
allow gravity_domain gravity_exec_t:file { create write rename };
corecmd_bin_filetrans(gravity_domain, gravity_exec_t, file)
corecmd_bin_filetrans(gravity_domain, gravity_kubernetes_exec_t, lnk_file, "kubectl")

sysnet_read_config(gravity_domain)
files_search_etc(gravity_domain)
files_search_var_lib(gravity_domain)
files_list_var_lib(gravity_domain)
# write access for /etc/modules-load.d/
files_manage_etc_files(gravity_domain)

# read/only access to lib/modules/* (preflight checks)
files_load_kernel_modules(gravity_domain)
files_search_kernel_modules(gravity_domain)
files_read_kernel_modules(gravity_domain)
allow gravity_domain self:rawip_socket { getopt setopt create };
kernel_read_state(gravity_domain)
kernel_read_network_state(gravity_domain)
kernel_read_all_sysctls(gravity_domain)
kernel_read_messages(gravity_t)
kernel_read_messages(gravity_installer_t)

# log to syslog
logging_send_syslog_msg(gravity_t)
logging_send_syslog_msg(gravity_installer_t)

# allow unconfined/staff/sysadm domains to use gravity
optional_policy(`
  gen_require(`
    role unconfined_r;
  ')
  unconfined_run_to(gravity_t, gravity_exec_t)
  unconfined_run_to(gravity_installer_t, gravity_installer_exec_t)
  role_transition unconfined_r gravity_exec_t system_r;
  role_transition unconfined_r gravity_installer_exec_t system_r;
')

optional_policy(`
  gen_require(`
    role sysadm_r;
    type sysadm_t;
  ')
  gravity_run(sysadm_t, sysadm_r)
  gravity_installer_domtrans(sysadm_t)
  role_transition sysadm_r gravity_exec_t system_r;
  role_transition sysadm_r gravity_installer_exec_t system_r;
')

optional_policy(`
  gen_require(`
    role staff_r;
    type staff_t;
  ')
  gravity_run(staff_t, staff_r)
  gravity_installer_domtrans(staff_t)
  role_transition staff_r gravity_exec_t system_r;
  role_transition staff_r gravity_installer_exec_t system_r;
')

allow gravity_domain self:capability { sys_ptrace sys_admin sys_resource chown fowner fsetid setuid setgid setpcap sys_chroot };
# TODO: remove dac_override
# This needs more work as /var/lib/gravity is owned by the service user
# but (some) commands are requiring root
allow gravity_domain self:capability { dac_override dac_read_search };

# mount systemd journals inside rootfs
allow gravity_domain gravity_container_home_t:dir mounton;

allow gravity_domain self:netlink_audit_socket create;

# SELinux-related rules
# allow restorecon to relabel /var/lib/gravity
allow setfiles_t gravity_home_t:file read;
selinux_get_enforce_mode(gravity_t)
selinux_get_enforce_mode(gravity_installer_t)
seutil_read_file_contexts(gravity_domain)
# bootstrap SELinux configuration when running in gravity domain.
# Should be a no-op but allow to avoid logging denials
seutil_domtrans_loadpolicy(gravity_domain)
# allow gravity to compute security context for executable
# unfortunately `selinuxexeccon` is not labeled for the type of access it performs
selinux_compute_create_context(gravity_installer_t)
selinux_compute_create_context(gravity_container_runtime_t)

#############################
#
# gravity installer
#
# switch the role to system_r when restarting
domain_role_change_exemption(gravity_installer_t)
userdom_read_admin_home_files(gravity_installer_t)
userdom_read_user_home_content_files(gravity_installer_t)
allow gravity_installer_t gravity_home_t:service { manage_service_perms };
seutil_dontaudit_read_file_contexts(gravity_installer_t)
userdom_user_home_content_filetrans(gravity_installer_t, gravity_home_t, file, "crashreport.tgz")
# create symlink for kubectl via ln
allow gravity_installer_t bin_t:lnk_file unlink;

dontaudit gravity_domain gravity_container_runtime_t:process { noatsecure rlimitinh siginh };
allow gravity_domain self:netlink_kobject_uevent_socket { getattr create bind setopt };
dbus_system_bus_client(gravity_domain)
init_dbus_chat(gravity_domain)
init_start_transient_unit(gravity_domain)
init_stop_transient_unit(gravity_domain)
# start/stop planet scope unit
systemd_start_systemd_services(gravity_domain)
fs_rw_tmpfs_files(gravity_domain)
fs_manage_cgroup_dirs(gravity_domain)
fs_manage_cgroup_files(gravity_domain)

# lsblk
fs_getattr_tmpfs(gravity_domain)
udev_read_pid_files(gravity_domain)

files_mounton_rootfs(gravity_domain)
files_unmount_rootfs(gravity_domain)
fs_relabelfrom_tmpfs(gravity_domain)
allow gravity_domain container_share_t:dir mounton;
allow gravity_domain container_file_t:dir mounton;
allow gravity_domain container_file_t:filesystem { relabelto relabelfrom };
gravity_manage_executable_content(gravity_domain)
allow gravity_domain container_runtime_exec_t:file { setattr unlink };

files_dontaudit_getattr_all_dirs(gravity_domain)
files_dontaudit_getattr_all_files(gravity_domain)
auth_dontaudit_getattr_shadow(gravity_domain)

########################################
#
# Planet local policy
#

##################
# init process
fs_manage_cgroup_dirs(gravity_container_init_t)
fs_manage_cgroup_files(gravity_container_init_t)
fs_mount_cgroup(gravity_container_init_t)
kernel_rw_fs_sysctls(gravity_container_init_t)
dev_read_kmsg(gravity_container_init_t)
dev_write_kmsg(gravity_container_init_t)
allow gravity_container_init_t sysctl_fs_t:file write;
allow gravity_container_init_t gravity_container_home_t:dir { write remove_name setattr };
allow gravity_container_init_t gravity_container_home_t:file { setattr ioctl rename lock unlink };
allow gravity_container_runtime_t gravity_container_init_t:key { view create setattr };
dontaudit gravity_container_runtime_t gravity_container_init_t:process { noatsecure rlimitinh siginh };
allow gravity_container_runtime_t gravity_container_init_t:unix_stream_socket { read write };
allow gravity_container_runtime_t gravity_home_t:file getattr;
allow gravity_container_init_t gravity_home_t:file { getattr read open };
allow gravity_container_init_t gravity_container_runtime_t:process { signal_perms };
allow gravity_container_init_t gravity_executable_domain:file entrypoint;
init_rw_stream_sockets(gravity_container_init_t)

# shutdown container
# systemd start /lib/systemd/system/halt.target
allow gravity_container_init_t gravity_container_file_t:service { manage_service_perms };
allow gravity_container_systemctl_t gravity_container_init_t:system halt;

# FIXME: /run/lock is labeled container_file_t for some reason!!!
#allow gravity_container_init_t container_file_t:dir mounton;

kernel_request_load_module(gravity_container_init_t)
# mknod /run/systemd/inaccessible/{fifo,sock}
allow gravity_container_init_t self:netlink_route_socket nlmsg_write;
allow gravity_container_init_t container_file_t:fifo_file { getattr open create read write };
allow gravity_container_init_t container_file_t:sock_file { setattr create write unlink };
allow gravity_container_init_t container_share_t:dir { write add_name };
allow gravity_container_init_t container_share_t:file write;

# FIXME: is this systemd creating the /var/log/journal inside the container?
allow gravity_container_init_t gravity_container_home_t:dir { search_dir_perms };
allow gravity_container_init_t gravity_home_t:dir { search_dir_perms };

dev_mounton_sysfs(gravity_container_init_t)
fs_mount_tmpfs(gravity_container_init_t)
fs_mounton_tmpfs(gravity_container_init_t)
fs_remount_tmpfs(gravity_container_init_t)

# FIXME: create a custom domain for 'planet agent'
# Use a symlink for the agent part if it works with a custom label?
gravity_container_runtime_domtrans(gravity_container_init_t)
container_runtime_domtrans(gravity_container_init_t)
domtrans_pattern(gravity_container_init_t, gravity_kubernetes_exec_t, gravity_kubernetes_t)
domtrans_pattern(gravity_container_init_t, gravity_service_exec_t, gravity_service_t)
domtrans_pattern(gravity_container_init_t, gravity_exec_t, gravity_t)
domtrans_pattern(gravity_container_init_t, gravity_container_systemctl_exec_t, gravity_container_systemctl_t)
domtrans_pattern(gravity_container_init_t, gravity_container_file_t, gravity_container_t)
domtrans_pattern(gravity_container_init_t, container_file_t, gravity_container_t)
# FIXME: need these? it is better to transition to respective domain
#can_exec(gravity_container_init_t, gravity_kubernetes_exec_t)
#can_exec(gravity_container_init_t, gravity_service_exec_t)
#allow gravity_container_init_t gravity_container_file_t:file entrypoint;

ps_process_pattern(gravity_container_init_t, gravity_container_domain)
#ps_process_pattern(gravity_container_init_t, gravity_container_runtime_t)
#ps_process_pattern(gravity_container_init_t, gravity_kubernetes_t)
#ps_process_pattern(gravity_container_init_t, gravity_service_t)
#ps_process_pattern(gravity_container_init_t, container_runtime_t)
#ps_process_pattern(gravity_container_init_t, gravity_container_domain)
#ps_process_pattern(gravity_container_init_t, gravity_container_runtime_t)
#ps_process_pattern(gravity_container_init_t, gravity_container_systemctl_t)
#ps_process_pattern(gravity_container_init_t, gravity_container_file_t)
allow gravity_container_init_t gravity_kubernetes_t:process { signal_perms };
allow gravity_container_init_t gravity_service_t:process { signal_perms };
allow gravity_container_init_t container_runtime_t:process { signal_perms };
allow gravity_container_init_t gravity_container_domain:process { signal_perms };
allow gravity_container_init_t gravity_container_domain:process2 nnp_transition;

allow gravity_container_init_t gravity_container_home_t:dir { read write open getattr create add_name };
allow gravity_container_init_t gravity_container_home_t:file { create getattr open read write };
allow gravity_container_init_t gravity_container_domain:unix_dgram_socket sendto;
allow gravity_container_init_t gravity_container_domain:unix_stream_socket { connectto read write };
allow gravity_container_init_t self:netlink_audit_socket nlmsg_relay;

# FIXME admin_pattern(files, dirs, chr_files, lnk_files, sock_files, blk_files)
allow gravity_container_init_t gravity_container_file_t:filesystem unmount;
allow gravity_container_init_t gravity_container_file_t:dir { create setattr write add_name remove_name rmdir mounton };
allow gravity_container_init_t gravity_container_file_t:file { getattr setattr open read create write rename unlink };
allow gravity_container_init_t gravity_container_file_t:chr_file { create open read write getattr ioctl lock };
allow gravity_container_init_t gravity_container_file_t:lnk_file { create unlink rename };
allow gravity_container_init_t gravity_container_file_t:blk_file create;
allow gravity_container_init_t gravity_container_file_t:fifo_file { getattr open create read write };
allow gravity_container_init_t gravity_container_file_t:sock_file { getattr setattr open create read write unlink };
allow gravity_container_init_t rpc_pipefs_t:filesystem { mount unmount };
allow gravity_container_init_t proc_t:filesystem unmount;
allow gravity_container_init_t tmpfs_t:filesystem unmount;

# dbus-daemon
allow gravity_container_init_t self:unix_stream_socket { getopt ioctl accept };
allow gravity_container_init_t self:unix_dgram_socket { getopt setopt };

kernel_manage_debugfs(gravity_container_init_t)
kernel_read_ring_buffer(gravity_container_init_t)
# comm=dbus-daemon path=/run/dbus/system_bus_socket
allow gravity_container_domain gravity_container_init_t:unix_stream_socket { accept getopt ioctl };

# /bin/systemd-sysusers
auth_manage_passwd(gravity_container_init_t)
auth_manage_shadow(gravity_container_init_t)

# start rpcbind.socket
# gravity_container_init_t -> gravity_container_t (/usr/bin/rpcbind)
allow gravity_container_init_t gravity_container_t:unix_stream_socket { client_stream_socket_perms server_stream_socket_perms };

# systemd-tmpfiles
# do not restore SELinux context inside the container
dontaudit gravity_container_init_t gravity_container_file_t:dir relabelfrom;
dontaudit gravity_container_init_t gravity_container_home_t:dir relabelfrom;
# create files in wtmp
auth_rw_login_records(gravity_container_init_t)
#auth_dontaudit_read_login_records(gravity_container_init_t)
#auth_dontaudit_write_login_records(gravity_container_init_t)
auth_create_lastlog(gravity_container_init_t)
auth_rw_faillog(gravity_container_init_t)

allow container_runtime_t gravity_container_init_t:dbus send_msg;
allow gravity_container_init_t container_runtime_t:dbus send_msg;

# systemctl
allow gravity_container_init_t gravity_container_systemctl_t:dir search;
allow gravity_container_systemctl_t gravity_container_init_t:file { read_file_perms };
allow gravity_container_systemctl_t gravity_kubernetes_t:dir { search_dir_perms };
allow gravity_container_systemctl_t gravity_service_t:dir { search_dir_perms };
allow gravity_container_systemctl_t gravity_container_init_t:unix_stream_socket connectto;
allow gravity_container_systemctl_t gravity_container_file_t:dir { search_dir_perms }; # FIXME: read_file_pattern(gravity_container_systemctl_t, gravity_container_file_t, ...)
allow gravity_container_systemctl_t gravity_container_init_t:system { status reload disable enable kill halt };
allow gravity_container_systemctl_t gravity_container_init_t:dbus send_msg;
allow gravity_container_init_t gravity_container_systemctl_t:dbus send_msg;
allow gravity_container_init_t gravity_container_systemctl_t:unix_stream_socket { create setopt bind listen }; # FIXME: macro?
allow gravity_container_systemctl_t gravity_container_file_t:chr_file { read_chr_file_perms };
allow gravity_container_systemctl_t gravity_container_file_t:file { read_file_perms };
allow gravity_container_systemctl_t gravity_container_file_t:lnk_file { read_lnk_file_perms };
allow gravity_container_systemctl_t gravity_container_file_t:service { manage_service_perms };
allow gravity_container_systemctl_t gravity_container_domain:process { signal_perms };
#manage_service_filepattern(gravity_container_systemctl_t, gravity_unit_file_t);
domtrans_pattern(gravity_container_t, gravity_container_systemctl_exec_t, gravity_container_systemctl_t)
domtrans_pattern(gravity_container_init_t, gravity_container_systemctl_exec_t, gravity_container_systemctl_t)
domtrans_pattern(gravity_container_systemctl_t, gravity_container_init_exec_t, gravity_container_init_t)
# end-of-init process

allow gravity_container_init_t gravity_container_file_t:file write;
allow gravity_container_runtime_t gravity_container_file_t:chr_file mmap_file_perms;
allow gravity_container_runtime_t gravity_container_file_t:filesystem { relabelto relabelfrom mount };
allow gravity_container_runtime_t gravity_container_t:key create;
allow gravity_container_runtime_t gravity_kubernetes_t:key create;
allow gravity_container_runtime_t gravity_service_t:key create;
gravity_domtrans(gravity_container_runtime_t)
allow gravity_container_runtime_t gravity_domain:key create;
# planet can waitid on all started processes
allow domain gravity_container_runtime_t:process sigchld;

##################
# gravity services
#
allow gravity_service_t gravity_container_home_t:dir { getattr search open read write add_name remove_name create rename rmdir };
allow gravity_service_t gravity_container_home_t:file { getattr create open read append write unlink rename lock };
allow gravity_service_t gravity_home_t:file { getattr read open };
allow gravity_service_t gravity_home_t:dir { getattr search };
allow gravity_service_t container_file_t:sock_file write;
allow gravity_service_t gravity_container_init_t:unix_dgram_socket sendto;
allow gravity_service_t gravity_container_file_t:dir read;
allow gravity_service_t gravity_container_file_t:chr_file { read write ioctl lock open };
allow gravity_service_t gravity_container_file_t:sock_file write;
# etcdctl-cmd
allow gravity_service_t gravity_service_exec_t:lnk_file { read_lnk_file_perms };
search_dirs_pattern(gravity_service_t, gravity_container_file_t, gravity_container_file_t)
rw_files_pattern(gravity_service_t, gravity_container_file_t, gravity_container_file_t)
rw_lnk_files_pattern(gravity_service_t, gravity_container_file_t, gravity_container_file_t)
kernel_request_load_module(gravity_service_t)

allow gravity_container_runtime_t gravity_container_domain:unix_dgram_socket sendto;
allow gravity_container_runtime_t gravity_container_init_t:unix_stream_socket ioctl;
allow gravity_container_runtime_t container_runtime_t:unix_stream_socket connectto;

# 'planet agent'
allow gravity_container_runtime_t gravity_home_t:file { open read };
allow gravity_container_runtime_t gravity_container_init_t:unix_stream_socket connectto;

auth_read_passwd(gravity_kubernetes_t)
auth_read_passwd(gravity_service_t)

##################
# generic container processes
#
virt_sandbox_net_domain(gravity_container_t)
logging_send_syslog_msg(gravity_container_t)
dev_mounton_sysfs(gravity_container_domain)
fs_mounton_cgroup(gravity_container_domain)
fs_unmount_cgroup(gravity_container_domain)
# /bin/mount mqueue /dev/mqueue -t mqueue
fs_mount_tmpfs(gravity_container_domain)
corenet_unconfined(gravity_container_t)
virt_default_capabilities(gravity_container_t)
kernel_read_messages(gravity_container_t)
#allow gravity_container_domain proc_t:filesystem remount;
# /bin/mount sunrpc /run/rpc_pipefs -t rpc_pipefs
kernel_request_load_module(gravity_container_t)
# execute gravity inside the container in its domain
can_exec(gravity_container_t, gravity_exec_t)
gravity_domtrans(gravity_container_t)
gravity_read_state_files(gravity_container_domain)

manage_dirs_pattern(gravity_container_domain,  gravity_container_file_t, gravity_container_file_t)
manage_files_pattern(gravity_container_domain, gravity_container_file_t, gravity_container_file_t)
manage_lnk_files_pattern(gravity_container_domain, gravity_container_file_t, gravity_container_file_t)
manage_sock_files_pattern(gravity_container_domain, gravity_container_file_t, gravity_container_file_t)
manage_fifo_files_pattern(gravity_container_domain, gravity_container_file_t, gravity_container_file_t)
can_exec(gravity_container_domain, gravity_container_file_t)
allow gravity_container_domain gravity_container_file_t:blk_file setattr;
rw_blk_files_pattern(gravity_container_domain, gravity_container_file_t, gravity_container_file_t)
allow gravity_container_domain gravity_container_file_t:dir mounton;
allow gravity_container_domain gravity_container_file_t:filesystem { getattr remount };

gravity_read_container_files(container_domain)
gravity_search_state(container_domain)

allow gravity_container_domain gravity_container_init_t:unix_stream_socket { accept ioctl };
allow gravity_container_domain gravity_home_t:file open;
allow gravity_container_domain gravity_container_file_t:chr_file { read write getattr ioctl open };
# FIXME
allow gravity_container_domain gravity_container_file_t:chr_file lock;
# sys-kernel-config.mount, sys-kernel-debug.mount
gen_require(`
  type configfs_t;
')
allow gravity_container_t configfs_t:filesystem mount;
kernel_mount_debugfs(gravity_container_t)
kernel_unmount_debugfs(gravity_container_t)
fs_unmount_configfs(gravity_container_t)

# docker info
allow gravity_container_t container_runtime_t:unix_stream_socket connectto;

# ps, top
# allow ps to introspect init
domain_read_all_domains_state(gravity_container_domain)
allow gravity_container_domain domain:process getattr;
# grep, find
allow gravity_container_domain gravity_container_home_t:lnk_file read;
allow gravity_container_domain container_log_t:file { getattr open read };
container_runtime_read_tmpfs_files(gravity_container_domain)
# strace
#allow gravity_container_t gravity_container_init_t:process { ptrace signull }; # ??
#allow gravity_container_t gravity_container_init_t:dir { read open };
#allow gravity_container_t gravity_container_init_t:netlink_audit_socket getattr;
#allow gravity_container_init_t gravity_container_t:process { sigchld signull };
#allow gravity_container_t gravity_container_runtime_t:process { sigchld signull }; # ??
allow gravity_container_t gravity_container_domain:process { ptrace signal_perms };
allow gravity_container_t gravity_container_domain:dir { list_dir_perms };
dontaudit gravity_container_t gravity_container_init_t:netlink_audit_socket getattr;


##################
# Kubernetes components
#
dev_read_kmsg(gravity_kubernetes_t)
kernel_request_load_module(gravity_kubernetes_t)
# service unit files are labeled as gravity_unit_file_t inside planet as well
manage_files_pattern(gravity_kubernetes_t, gravity_unit_file_t, gravity_unit_file_t)
manage_lnk_files_pattern(gravity_kubernetes_t, gravity_unit_file_t, gravity_unit_file_t)
allow gravity_kubernetes_t gravity_unit_file_t:service { manage_service_perms };
# gravity_container_read_home(gravity_kubernetes_t)
allow gravity_kubernetes_t gravity_container_home_t:dir { getattr search open read remove_name write };
# kubelet: create /var/lib/kubelet/.*
allow gravity_kubernetes_t gravity_service_t:dir { getattr search };
allow gravity_kubernetes_t gravity_container_file_t:dir { getattr setattr search create remove_name mounton rmdir };
allow gravity_kubernetes_t gravity_container_file_t:file { getattr setattr read open create write unlink rename };
allow gravity_kubernetes_t gravity_container_file_t:sock_file { getattr read open create write rename unlink };
allow gravity_kubernetes_t gravity_container_file_t:chr_file { getattr read open create write ioctl };
allow gravity_kubernetes_t gravity_container_file_t:lnk_file { getattr read open create write ioctl rename unlink };
# append: kube-apiserver, audit.log
allow gravity_kubernetes_t gravity_container_home_t:file { getattr read open create append };
allow gravity_kubernetes_t gravity_container_init_t:dir { getattr search };
allow gravity_kubernetes_t gravity_container_init_t:lnk_file { getattr read open create unlink };
ps_process_pattern(gravity_kubernetes_t, gravity_container_runtime_t)
ps_process_pattern(gravity_kubernetes_t, gravity_container_file_t)
allow gravity_kubernetes_t container_file_t:dir mounton;
# systemd-run --description=Kubernetes systemd probe --scope true
allow gravity_kubernetes_t gravity_container_init_t:file { getattr read open };
allow gravity_kubernetes_t gravity_container_init_t:unix_stream_socket connectto;
# kube-proxy (/var/state/root.cert)
allow gravity_kubernetes_t gravity_home_t:file open;
allow gravity_kubernetes_t gravity_home_t:dir { read create write add_name };
# comm=kube-proxy name=system_bus_socket, kubelet
# FIXME (container_manage_sock_files(gravity_kubernetes_t)?)
allow gravity_kubernetes_t container_file_t:sock_file { getattr create write rename unlink };
allow gravity_kubernetes_t gravity_container_file_t:dir { write add_name };
# read certificates
allow gravity_kubernetes_t gravity_home_t:dir search;
allow gravity_kubernetes_t gravity_home_t:file { getattr read open };
# kubelet
allow gravity_kubernetes_t container_runtime_t:unix_stream_socket connectto;
allow gravity_kubernetes_t gravity_service_t:file { getattr read open };
allow gravity_kubernetes_t gravity_home_t:dir write;
allow gravity_kubernetes_t container_runtime_t:process sigkill;
allow gravity_kubernetes_t gravity_container_domain:process sigkill;
kernel_read_ring_buffer(gravity_kubernetes_t)
container_runtime_read_tmpfs_files(gravity_kubernetes_t)
# kube-apiserver: /var/log/apiserver/audit.log
allow gravity_kubernetes_t gravity_container_home_t:file write;
# kubelet: /proc/<id>
domain_read_all_domains_state(gravity_kubernetes_t)
# kubelet: write /proc/214/oom_score_adj
allow gravity_kubernetes_t container_runtime_t:file write;
# kubelet: write /proc/sys/vm/overcommit_memory
kernel_rw_vm_overcommit_sysctls(gravity_kubernetes_t)
fs_manage_cgroup_dirs(gravity_kubernetes_t)
fs_manage_cgroup_files(gravity_kubernetes_t)
# /usr/bin/mount -t tmpfs tmpfs /var/lib/kubelet/pods/5b1d644c-3b6c-4c6a-9bde-97fa6dc87520/volumes/kubernetes.io~secret/default-to
fs_mount_tmpfs(gravity_kubernetes_t)
fs_unmount_tmpfs(gravity_kubernetes_t)
allow gravity_kubernetes_t gravity_container_home_t:dir { add_name create };
# kubelet: write resolv.conf
allow gravity_kubernetes_t container_share_t:file write;
allow gravity_kubernetes_t container_var_lib_t:file { getattr read open write };
allow gravity_kubernetes_t container_log_t:file { getattr read open };
allow gravity_kubernetes_t gravity_container_home_t:dir rmdir;
allow gravity_kubernetes_t container_runtime_tmpfs_t:dir getattr;
allow gravity_kubernetes_t gravity_container_home_t:lnk_file { getattr create read unlink };
allow gravity_kubernetes_t gravity_home_t:dir getattr;
allow gravity_kubernetes_t spc_t:process sigkill;
can_exec(gravity_kubernetes_t, gravity_container_file_t)
# kubelet: execve /usr/bin/systemd-run
# Maybe labeling /usr/lib/systemd* as init_t was a mistake?
can_exec(gravity_kubernetes_t, gravity_container_init_exec_t)
# kubelet (FIXME - is this necessary?)
read_files_pattern(gravity_kubernetes_t, gravity_container_logger_home_t, gravity_container_logger_home_t)

# lsof
allow gravity_container_domain container_runtime_t:tcp_socket getattr;
allow gravity_container_domain container_runtime_t:unix_dgram_socket getattr;
allow gravity_container_domain container_runtime_t:unix_stream_socket getattr;
allow gravity_container_domain gravity_container_init_t:lnk_file getattr;
allow gravity_container_domain gravity_container_init_t:unix_dgram_socket getattr;
allow gravity_container_domain gravity_container_init_t:unix_stream_socket getattr;
allow gravity_container_domain gravity_container_runtime_t:tcp_socket getattr;
allow gravity_container_domain gravity_container_runtime_t:unix_dgram_socket getattr;
allow gravity_container_domain gravity_container_runtime_t:unix_stream_socket getattr;
dev_read_kmsg(gravity_container_domain)
# usr/lib/systemd/system-generators/systemd-system-update-generator /run/systemd/generator /run/systemd/generator.early /run/systemd
dev_write_kmsg(gravity_container_domain)
# journalctl
allow gravity_container_domain gravity_container_home_t:dir { rw_dir_perms rmdir };
allow gravity_container_domain gravity_container_home_t:file { manage_file_perms };
# comm=journalctl path=/run/dbus/system_bus_socket
allow gravity_container_t gravity_container_init_t:unix_stream_socket connectto;
# etcdctl-cmd: /run/systemd/journal/socket
allow gravity_container_domain gravity_container_init_t:unix_dgram_socket sendto;

#allow gravity_container_runtime_t gravity_container_domain:key create;
allow gravity_container_runtime_t gravity_container_file_t:key create;

allow gravity_container_runtime_t gravity_container_init_t:unix_dgram_socket sendto;
# start/stop planet scope units
systemd_config_generic_services(gravity_container_runtime_t)
admin_pattern(gravity_container_runtime_t, gravity_container_var_run_t)
admin_pattern(gravity_container_runtime_t, gravity_container_home_t)
admin_pattern(gravity_container_runtime_t, gravity_container_file_t)
manage_chr_files_pattern(gravity_container_runtime_t, gravity_container_file_t, gravity_container_file_t)
manage_blk_files_pattern(gravity_container_runtime_t, gravity_container_file_t, gravity_container_file_t)
files_root_filetrans(gravity_container_runtime_t, gravity_container_file_t, dir_file_class_set)
allow gravity_container_runtime_t gravity_home_t:dir { mounton getattr search };
allow gravity_container_runtime_t gravity_home_t:file mounton;
allow gravity_container_runtime_t gravity_container_home_t:dir mounton;
allow gravity_container_runtime_t gravity_container_home_t:file { mounton entrypoint execute };
allow gravity_container_runtime_t gravity_home_t:lnk_file read;
allow gravity_container_runtime_t gravity_var_run_t:sock_file unlink;
allow gravity_container_runtime_t self:capability chown;
neverallow gravity_container_runtime_t self:capability dac_override;
allow gravity_container_runtime_t self:process getattr;
allow gravity_container_runtime_t self:tcp_socket { connect create setopt getopt getattr };
init_status(gravity_container_runtime_t)
init_stop_transient_unit(gravity_container_runtime_t)

dbus_system_bus_client(gravity_container_runtime_t)
# udev monitor
udev_create_kobject_uevent_socket(gravity_container_runtime_t)

filetrans_pattern(gravity_container_runtime_t, gravity_container_file_t, gravity_service_exec_t, lnk_file, "etcdctl-cmd")
allow gravity_container_runtime_t gravity_service_exec_t:lnk_file manage_lnk_file_perms;
files_pid_filetrans(gravity_container_runtime_t, container_var_run_t, dir, "planet")
files_pid_filetrans(gravity_container_runtime_t, container_var_run_t, sock_file, "planet.socket")

#######################
# gravity uninstall
#
allow gravity_domain container_file_t:sock_file { getattr unlink };
allow gravity_domain container_log_t:file unlink;
allow gravity_domain container_share_t:blk_file { getattr unlink };
allow gravity_domain container_share_t:chr_file { getattr unlink };
# rm -r /usr/local/share/gravity
allow gravity_domain usr_t:dir { write rmdir };
allow gravity_domain usr_t:file { unlink };

#######################
# gravity report
#
# read process state (including attributes)
domain_read_all_domains_state(gravity_domain)
ps_process_pattern(gravity_domain, domain)
seutil_read_default_contexts(gravity_domain)
# df -i
allow gravity_domain configfs_t:dir { list_dir_perms };
# store bits from /etc
allow gravity_domain selinux_config_t:dir { list_dir_perms };
# system export-runtime-journal: mount /var/lib/gravity/local/packages/unpacked/gravitational.io/planet/<version>/rootfs/tmp/journal
allow gravity_domain gravity_container_file_t:dir mounton;

gen_require(`
  type staff_t;
  role staff_r;
')
gravity_role(staff_r, staff_t)

allow gravity_domain init_t:service { disable enable stop };

gen_require(`
  type rpc_pipefs_t;
')
allow gravity_container_domain rpc_pipefs_t:filesystem mount;
allow gravity_container_init_t spc_t:process signull;
allow gravity_container_init_t spc_t:dir search;
allow gravity_container_domain gravity_container_init_t:unix_dgram_socket { read write };
allow gravity_container_domain gravity_container_init_t:unix_stream_socket { read write };
# FIXME
allow gravity_container_domain container_runtime_t:process { signal_perms }; # ??
allow gravity_container_domain gravity_container_home_t:dir setattr; # ??
allow gravity_container_domain gravity_container_home_t:file setattr; # ??
allow gravity_container_domain gravity_container_runtime_t:process { signal_perms }; # ??
allow gravity_container_domain gravity_home_t:file { getattr read open }; # ??

# FIXME: track down this denial
#allow gravity_kubernetes_t gravity_container_init_exec_t:file getattr;


# ================ debugging SELinux in read/write inside container ======================


# support for MLS-enabled docker configuration
#ifdef(`enable_mls',`
#  init_ranged_daemon_domain(gravity_kubernetes_t, gravity_kubernetes_exec_t, s0 - mls_systemhigh)
#')
#mls_file_read_to_clearance(gravity_kubernetes_t)
#mls_file_write_to_clearance(gravity_kubernetes_t)
#allow gravity_kubernetes_t container_runtime_exec_t:file { execute getattr };

# FIXME
#!!!! The file '/home/redhat/installer/gravity' is mislabeled on your system.
#!!!! Fix with $ restorecon -R -v /home/redhat/installer/gravity
allow gravity_installer_t self:process transition;
# type=PROCTITLE msg=audit(08.01.2020 18:00:12.500:6779) : proctitle=./gravity --debug install --cluster=dev.test --advertise-addr=10.128.0.12 --cloud-provider=generic --token=schmoken --selinux
# type=SYSCALL msg=audit(08.01.2020 18:00:12.500:6779) : arch=x86_64 syscall=execve success=no exit=EACCES(Permission denied) a0=0xc000938100 a1=0xc000c2c3c0 a2=0xc0005482c0 a3=0x0 items=0 ppid=28442 pid=31454 auid=redhat uid=root gid=root euid=root suid=root fsuid=root egid=root sgid=root fsgid=root tty=pts1 ses=29 comm=gravity exe=/home/redhat/installer/gravity subj=staff_u:sysadm_r:gravity_installer_t:s0-s0:c0.c1023 key=(null)
# type=AVC msg=audit(08.01.2020 18:00:12.500:6779) : avc:  denied  { transition } for  pid=31454 comm=gravity path=/home/redhat/installer/gravity dev="sda1" ino=83982273 scontext=staff_u:sysadm_r:gravity_installer_t:s0-s0:c0.c1023 tcontext=staff_u:system_r:gravity_installer_t:s0-s0:c0.c1023 tclass=process permissive=0

# FIXME
allow gravity_container_t self:process setfscreate;
# type=PROCTITLE msg=audit(08.01.2020 17:59:38.026:6675) : proctitle=/bin/systemd-tmpfiles --create --remove --boot --exclude-prefix=/dev
# type=SYSCALL msg=audit(08.01.2020 17:59:38.026:6675) : arch=x86_64 syscall=write success=no exit=EACCES(Permission denied) a0=0x4 a1=0x0 a2=0x0 a3=0x73 items=0 ppid=28710 pid=28781 auid=unset uid=root gid=root euid=root suid=root fsuid=root egid=root sgid=root fsgid=root tty=(none) ses=unset comm=systemd-tmpfile exe=/usr/bin/systemd-tmpfiles subj=system_u:system_r:gravity_container_init_t:s0 key=(null)
# type=AVC msg=audit(08.01.2020 17:59:38.026:6675) : avc:  denied  { setfscreate } for  pid=28781 comm=systemd-tmpfile scontext=system_u:system_r:gravity_container_init_t:s0 tcontext=system_u:system_r:gravity_container_init_t:s0 tclass=process permissive=0

# exe=/usr/lib/systemd/systemd
allow gravity_container_init_t self:system status;
allow gravity_container_init_t selinux_config_t:file { read_file_perms }; # FIXME: macro
allow gravity_container_init_t file_context_t:dir { list_dir_perms };
# comm=systemd-sysuser name=file_contexts.subs_dist
allow gravity_container_init_t file_context_t:file { read_file_perms };
allow gravity_container_init_t default_context_t:dir { list_dir_perms }; # FIXME: macro this and below
allow gravity_container_init_t default_context_t:file { read_file_perms };
allow gravity_container_init_t security_t:file { manage_file_perms };
allow gravity_container_init_t security_t:security { compute_create compute_av };
allow gravity_container_init_t security_t:dir { list_dir_perms };
allow gravity_container_init_t self:process { setfscreate setsockcreate };
allow gravity_container_init_t container_runtime_t:unix_stream_socket { create setopt bind listen }; # FIXME: macro?
# type=USER_AVC msg=audit(09.01.2020 11:41:08.531:3742) : pid=5652 uid=unknown(105) auid=unset ses=unset subj=system_u:system_r:gravity_container_init_t:s0 msg='avc:  denied  { send_msg } for msgtype=method_return dest=:1.282 spid=1 tpid=1432 scontext=system_u:system_r:gravity_container_init_t:s0 tcontext=system_u:system_r:gravity_container_runtime_t:s0 tclass=dbus  exe=/usr/bin/dbus-daemon sauid=unknown(105) hostname=? addr=? terminal=?
allow gravity_container_init_t gravity_container_runtime_t:dbus send_msg;
allow gravity_container_init_t self:dbus send_msg;
# type=USER_AVC msg=audit(09.01.2020 11:22:02.471:2340) : pid=5652 uid=unknown(105) auid=unset ses=unset subj=system_u:system_r:gravity_container_init_t:s0 msg='avc:  denied  { acquire_svc } for service=org.freedesktop.systemd1 spid=1 scontext=system_u:system_r:gravity_container_init_t:s0 tcontext=system_u:system_r:gravity_container_init_t:s0 tclass=dbus  exe=/usr/bin/dbus-daemon sauid=unknown(105) hostname=? addr=? terminal=?'
gen_require(`
  class dbus {send_msg acquire_svc};
')
allow gravity_container_init_t self:dbus acquire_svc;


# type=USER_AVC msg=audit(09.01.2020 11:46:06.761:4038) : pid=5652 uid=unknown(105) auid=unset ses=unset subj=system_u:system_r:gravity_container_init_t:s0 msg='avc:  denied  { send_msg } for msgtype=method_call interface=org.freedesktop.DBus member=Hello dest=org.freedesktop.DBus spid=9713 scontext=system_u:system_r:gravity_container_t:s0 tcontext=system_u:system_r:gravity_container_init_t:s0 tclass=dbus  exe=/usr/bin/dbus-daemon sauid=unknown(105) hostname=? addr=? terminal=?'
allow gravity_container_t gravity_container_init_t:dbus send_msg;
# type=USER_AVC msg=audit(09.01.2020 11:48:17.758:4193) : pid=5652 uid=unknown(105) auid=unset ses=unset subj=system_u:system_r:gravity_container_init_t:s0 msg='avc:  denied  { send_msg } for msgtype=method_return dest=:1.306 spid=1 tpid=10125 scontext=system_u:system_r:gravity_container_init_t:s0 tcontext=system_u:system_r:gravity_container_t:s0 tclass=dbus  exe=/usr/bin/dbus-daemon sauid=unknown(105) hostname=? addr=? terminal=?'
allow gravity_container_init_t gravity_container_t:dbus send_msg;
# FIXME: label kubernetes service files as such (~gravity_container_file_t)
# type=USER_AVC msg=audit(09.01.2020 11:15:27.930:1621) : pid=1807 uid=root auid=unset ses=unset subj=system_u:system_r:gravity_container_init_t:s0 msg='avc:  denied  { start } for auid=root uid=root gid=root path=/lib/systemd/system/kube-apiserver.service cmdline="" scontext=system_u:system_r:gravity_container_runtime_t:s0 tcontext=system_u:object_r:gravity_container_file_t:s0 tclass=service  exe=/usr/lib/systemd/systemd sauid=root hostname=? addr=? terminal=?'
# init_t -> /lib/systemd/system/kube-controller-manager.service
allow gravity_container_runtime_t gravity_container_file_t:service { start status };
# type=USER_AVC msg=audit(09.01.2020 11:18:53.572:1988) : pid=5652 uid=unknown(105) auid=unset ses=unset subj=system_u:system_r:gravity_container_init_t:s0 msg='avc:  denied  { send_msg } for msgtype=method_call interface=org.freedesktop.DBus member=Hello dest=org.freedesktop.DBus spid=1432 scontext=system_u:system_r:gravity_container_runtime_t:s0 tcontext=system_u:system_r:gravity_container_init_t:s0 tclass=dbus  exe=/usr/bin/dbus-daemon sauid=unknown(105) hostname=? addr=? terminal=?'
allow gravity_container_runtime_t gravity_container_init_t:dbus send_msg;
# type=USER_AVC msg=audit(09.01.2020 11:15:23.528:1605) : pid=5652 uid=unknown(105) auid=unset ses=unset subj=system_u:system_r:gravity_container_init_t:s0 msg='avc:  denied  { send_msg } for msgtype=method_call interface=org.freedesktop.DBus member=Hello dest=org.freedesktop.DBus spid=111 scontext=system_u:system_r:gravity_kubernetes_t:s0 tcontext=system_u:system_r:gravity_container_init_t:s0 tclass=dbus  exe=/usr/bin/dbus-daemon sauid=unknown(105) hostname=? addr=? terminal=?'
allow gravity_kubernetes_t gravity_container_init_t:dbus send_msg;

# ??
allow gravity_container_t self:udp_socket listen;
# /home/redhat/installer/gravity install --debug --cluster dev.test --advertise-addr 10.128.0.12 --cloud-provider generic --token ...
# comm=gravity capability=net_admin
# NOTE: some domains have a donaudit rule for capability(net_admin)
allow gravity_installer_t self:capability net_admin;
# rootfs/usr/bin/teleport start ...
# comm=teleport exe=/var/lib/gravity/local/packages/unpacked/gravitational.io/teleport/3.2.13/rootfs/usr/bin/teleport subj=system_u:system_r:gravity_t:s0
# comm=teleport capability=net_admin  scontext=system_u:system_r:gravity_t:s0 tcontext=system_u:system_r:gravity_t:s0 tclass=capability
allow gravity_t self:capability net_admin;
# comm=kube-proxy path=socket:[29945]
allow gravity_kubernetes_t gravity_container_init_t:unix_stream_socket { read write };
# modprobe -- ip_vs_sh
# comm=modprobe exe=/usr/bin/kmod syscall=finit_module
allow gravity_kubernetes_t self:capability sys_module;
# /bin/bash /usr/bin/etcdctl --cert-file=/var/state/etcd.cert --key-file=/var/state/etcd.key --ca-file=/var/state/root.cert --peer ...
# comm=etcdctl path=socket:[39722]
allow gravity_service_t gravity_container_init_t:unix_stream_socket ioctl;

# type=USER_AVC msg=audit(09.01.2020 10:49:50.317:252) : pid=1807 uid=root auid=unset ses=unset subj=system_u:system_r:gravity_container_init_t:s0 msg='avc:  denied  { stop } for auid=root uid=root gid=root path=/lib/systemd/system/systemd-journald.service cmdline="" scontext=system_u:system_r:gravity_container_t:s0 tcontext=system_u:object_r:gravity_container_file_t:s0 tclass=service  exe=/usr/lib/systemd/systemd sauid=root hostname=? addr=? terminal=?
allow gravity_container_init_t gravity_container_file_t:service status;

# /usr/bin/etcd --name=10_128_0_12.dev.test --data-dir=/ext/etcd/v3.3.12 --initial-advertise-peer-urls=https://10.128.0.12:2380 --
allow gravity_service_t gravity_container_init_t:unix_stream_socket { read write };

# FIXME
allow gravity_container_t self:capability sys_module;

# type=PROCTITLE msg=audit(08.01.2020 19:06:28.529:52750) : proctitle=/bin/systemd --version
# type=SYSCALL msg=audit(08.01.2020 19:06:28.529:52750) : arch=x86_64 syscall=open success=no exit=EACCES(Permission denied) a0=0x7f0ed873654d a1=O_WRONLY|O_NOCTTY|O_CLOEXEC a2=0x2 a3=0x7f0ed8737640 items=0 ppid=18694 pid=16027 auid=unset uid=root gid=root euid=root suid=root fsuid=root egid=root sgid=root fsgid=root tty=(none) ses=unset comm=systemd exe=/usr/lib/systemd/systemd subj=system_u:system_r:gravity_container_runtime_t:s0 key=(null)
# type=AVC msg=audit(08.01.2020 19:06:28.529:52750) : avc:  denied  { write } for  pid=16027 comm=systemd name=kmsg dev="devtmpfs" ino=1034 scontext=system_u:system_r:gravity_container_runtime_t:s0 tcontext=system_u:object_r:kmsg_device_t:s0 tclass=chr_file permissive=0
allow gravity_container_runtime_t kmsg_device_t:chr_file { open write }; # FIXME: macro?

# type=USER_AVC msg=audit(08.01.2020 20:29:37.619:122448) : pid=28710 uid=root auid=unset ses=unset subj=system_u:system_r:gravity_container_init_t:s0 msg='avc:  denied  { status } for auid=root uid=root gid=root cmdline="" scontext=system_u:system_r:gravity_container_runtime_t:s0 tcontext=system_u:system_r:gravity_container_init_t:s0 tclass=system  exe=/usr/lib/systemd/systemd sauid=root hostname=? addr=? terminal=?'
allow gravity_container_runtime_t gravity_container_init_t:system status;

# FIXME: label etcd.service (and other services) appropriately
# type=USER_AVC msg=audit(08.01.2020 20:21:06.181:115812) : pid=4863 uid=root auid=unset ses=unset subj=system_u:system_r:gravity_container_init_t:s0 msg='avc:  denied  { status } for auid=root uid=root gid=root path=/lib/systemd/system/etcd.service cmdline="" scontext=system_u:system_r:gravity_container_t:s0 tcontext=system_u:object_r:gravity_container_file_t:s0 tclass=service  exe=/usr/lib/systemd/systemd sauid=root hostname=? addr=? terminal=?'
allow gravity_container_t gravity_container_file_t:service { start stop status };
# type=USER_AVC msg=audit(08.01.2020 20:40:00.457:129626) : pid=4863 uid=root auid=unset ses=unset subj=system_u:system_r:gravity_container_init_t:s0 msg='avc:  denied  { status } for auid=root uid=root gid=root cmdline="" scontext=system_u:system_r:gravity_container_t:s0 tcontext=system_u:system_r:gravity_container_init_t:s0 tclass=system  exe=/usr/lib/systemd/systemd sauid=root hostname=? addr=? terminal=?'
allow gravity_container_t gravity_container_init_t:system status;


# type=PROCTITLE msg=audit(09.01.2020 11:49:34.572:4322) : proctitle=/usr/bin/kubelet --hostname-override=10.128.0.12 --logtostderr=true --cluster-dns=10.100.216.253 --pod-infra-container-image=lea ...
# type=SYSCALL msg=audit(09.01.2020 11:49:34.572:4322) : arch=x86_64 syscall=lsetxattr success=no exit=EACCES(Permission denied) a0=0xc00090c300 a1=0xc0007e5020 a2=0xc00090c2d0 a3=0x25 items=0 ppid=1807 pid=16600 auid=unset uid=root gid=root euid=root suid=root fsuid=root egid=root sgid=root fsgid=root tty=(none) ses=unset comm=kubelet exe=/usr/bin/kubelet subj=system_u:system_r:gravity_kubernetes_t:s0 key=(null)
# type=AVC msg=audit(09.01.2020 11:49:34.572:4322) : avc:  denied  { relabelfrom } for  pid=16600 comm=kubelet name=plugins_registry dev="sda1" ino=83886181 scontext=system_u:system_r:gravity_kubernetes_t:s0 tcontext=system_u:object_r:gravity_container_file_t:s0 tclass=dir permissive=0
allow gravity_kubernetes_t gravity_container_file_t:dir relabelfrom;
# kubelet?
# /run/systemd/scopeXXX unit files
# FIXME: relabel to service file type?
allow gravity_kubernetes_t gravity_container_file_t:service { start stop status };
# type=PROCTITLE msg=audit(09.01.2020 11:49:18.674:4283) : proctitle=/usr/bin/kube-apiserver --insecure-port=0 --service-account-key-file=/var/state/apiserver.key --service-account-lookup=true --ad ...
# type=SYSCALL msg=audit(09.01.2020 11:49:18.674:4283) : arch=x86_64 syscall=ioctl success=no exit=EACCES(Permission denied) a0=0x1 a1=TCGETS a2=0xc000945d4c a3=0x0 items=0 ppid=1807 pid=16435 auid=unset uid=redhat gid=google-sudoers euid=redhat suid=redhat fsuid=redhat egid=google-sudoers sgid=google-sudoers fsgid=google-sudoers tty=(none) ses=unset comm=kube-apiserver exe=/usr/bin/kube-apiserver subj=system_u:system_r:gravity_kubernetes_t:s0 key=(null)
# type=AVC msg=audit(09.01.2020 11:49:18.674:4283) : avc:  denied  { ioctl } for  pid=16435 comm=kube-apiserver path=socket:[179302] dev="sockfs" ino=179302 ioctlcmd=TCGETS scontext=system_u:system_r:gravity_kubernetes_t:s0 tcontext=system_u:system_r:gravity_container_init_t:s0 tclass=unix_stream_socket permissive=0
allow gravity_kubernetes_t gravity_container_init_t:unix_stream_socket ioctl;

gen_require(`
  type container_t;
  type container_file_t;
')
allow container_t container_runtime_t:process sigchld;

# type=PROCTITLE msg=audit(09.01.2020 12:11:22.056:11965) : proctitle=/usr/bin/kubelet --hostname-override=10.128.0.12 --logtostderr=true --cluster-dns=10.100.216.253 --pod-infra-container-image=lea ...
# type=SYSCALL msg=audit(09.01.2020 12:11:22.056:11965) : arch=x86_64 syscall=openat success=no exit=EACCES(Permission denied) a0=0xffffffffffffff9c a1=0xc0011829a0 a2=O_RDONLY|O_CLOEXEC a3=0x0 items=0 ppid=1807 pid=20412 auid=unset uid=root gid=root euid=root suid=root fsuid=root egid=root sgid=root fsgid=root tty=(none) ses=unset comm=kubelet exe=/usr/bin/kubelet subj=system_u:system_r:gravity_kubernetes_t:s0 key=(null)
# type=AVC msg=audit(09.01.2020 12:11:22.056:11965) : avc:  denied  { read } for  pid=20412 comm=kubelet name=/ dev="tmpfs" ino=458191 scontext=system_u:system_r:gravity_kubernetes_t:s0 tcontext=system_u:object_r:container_file_t:s0:c268,c920 tclass=dir permissive=0
allow gravity_kubernetes_t container_file_t:dir read;
# type=PROCTITLE msg=audit(09.01.2020 12:11:22.054:11964) : proctitle=/usr/bin/kubelet --hostname-override=10.128.0.12 --logtostderr=true --cluster-dns=10.100.216.253 --pod-infra-container-image=lea ...
# type=SYSCALL msg=audit(09.01.2020 12:11:22.054:11964) : arch=x86_64 syscall=openat success=no exit=EACCES(Permission denied) a0=0xffffffffffffff9c a1=0xc000f688c0 a2=O_WRONLY|O_TRUNC|O_CLOEXEC a3=0x1a4 items=0 ppid=1807 pid=20412 auid=unset uid=root gid=root euid=root suid=root fsuid=root egid=root sgid=root fsgid=root tty=(none) ses=unset comm=kubelet exe=/usr/bin/kubelet subj=system_u:system_r:gravity_kubernetes_t:s0 key=(null)
# type=AVC msg=audit(09.01.2020 12:11:22.054:11964) : avc:  denied  { write } for  pid=20412 comm=kubelet name=resolv.conf dev="sda1" ino=176272238 scontext=system_u:system_r:gravity_kubernetes_t:s0 tcontext=system_u:object_r:container_file_t:s0:c268,c920 tclass=file permissive=0
allow gravity_kubernetes_t container_file_t:file write;

# type=PROCTITLE msg=audit(09.01.2020 12:06:26.872:7811) : proctitle=/usr/bin/nsenter --net=/proc/5020/ns/net -F -- ip -o -6 addr show dev eth0 scope global ...
# type=SYSCALL msg=audit(09.01.2020 12:06:26.872:7811) : arch=x86_64 syscall=open success=no exit=EACCES(Permission denied) a0=0x7ffd2061b9c1 a1=O_RDONLY a2=0x7ffd2061b9c1 a3=0x69f items=0 ppid=20412 pid=13234 auid=unset uid=root gid=root euid=root suid=root fsuid=root egid=root sgid=root fsgid=root tty=(none) ses=unset comm=nsenter exe=/usr/bin/nsenter subj=system_u:system_r:gravity_kubernetes_t:s0 key=(null)
# type=AVC msg=audit(09.01.2020 12:06:26.872:7811) : avc:  denied  { search } for  pid=13234 comm=nsenter name=5020 dev="proc" ino=294880 scontext=system_u:system_r:gravity_kubernetes_t:s0 tcontext=system_u:system_r:container_t:s0:c105,c333 tclass=dir permissive=0
# allow gravity_kubernetes_t container_t:dir search;

# type=PROCTITLE msg=audit(09.01.2020 12:05:13.094:6792) : proctitle=ps auxZ ...
# type=SYSCALL msg=audit(09.01.2020 12:05:13.094:6792) : arch=x86_64 syscall=open success=no exit=EACCES(Permission denied) a0=0x7ffc4d7f74f0 a1=O_RDONLY a2=0x0 a3=0x73 items=0 ppid=4301 pid=4512 auid=unset uid=root gid=root euid=root suid=root fsuid=root egid=root sgid=root fsgid=root tty=pts0 ses=unset comm=ps exe=/usr/bin/ps subj=system_u:system_r:gravity_container_t:s0 key=(null)
# type=AVC msg=audit(09.01.2020 12:05:13.094:6792) : avc:  denied  { search } for  pid=4512 comm=ps name=29332 dev="proc" ino=267068 scontext=system_u:system_r:gravity_container_t:s0 tcontext=system_u:system_r:container_t:s0:c55,c214 tclass=dir permissive=0
# allow gravity_container_t container_t:dir search;


# type=PROCTITLE msg=audit(09.01.2020 17:25:12.230:77500) : proctitle=/usr/bin/planet agent --name=10_128_0_12.dev.test --rpc-addr=10.128.0.12:7575 --rpc-addr=127.0.0.1:7575 --metrics-addr=10.128.0. ...
# type=SYSCALL msg=audit(09.01.2020 17:25:12.230:77500) : arch=x86_64 syscall=execve success=no exit=EACCES(Permission denied) a0=0xc0001865a0 a1=0xc000518100 a2=0xc0004a8d80 a3=0x0 items=0 ppid=3974 pid=11667 auid=unset uid=root gid=root euid=root suid=root fsuid=root egid=root sgid=root fsgid=root tty=(none) ses=unset comm=planet exe=/usr/bin/planet subj=system_u:system_r:gravity_container_runtime_t:s0 key=(null)
# type=AVC msg=audit(09.01.2020 17:25:12.230:77500) : avc:  denied  { execute } for  pid=11667 comm=planet name=dbus-daemon dev="sda1" ino=209866101 scontext=system_u:system_r:gravity_container_runtime_t:s0 tcontext=system_u:object_r:gravity_container_init_exec_t:s0 tclass=file permissive=0
#allow gravity_container_runtime_t gravity_container_init_exec_t:file execute;
# type=PROCTITLE msg=audit(09.01.2020 17:25:12.152:77497) : proctitle=/usr/bin/planet agent --name=10_128_0_12.dev.test --rpc-addr=10.128.0.12:7575 --rpc-addr=127.0.0.1:7575 --metrics-addr=10.128.0. ...
# type=SYSCALL msg=audit(09.01.2020 17:25:12.152:77497) : arch=x86_64 syscall=execve success=no exit=EACCES(Permission denied) a0=0xc000a47360 a1=0xc00000e0e0 a2=0xc0003657a0 a3=0x0 items=0 ppid=3974 pid=11612 auid=unset uid=root gid=root euid=root suid=root fsuid=root egid=root sgid=root fsgid=root tty=(none) ses=unset comm=planet exe=/usr/bin/planet subj=system_u:system_r:gravity_container_runtime_t:s0 key=(null)
# type=AVC msg=audit(09.01.2020 17:25:12.152:77497) : avc:  denied  { read } for  pid=11612 comm=planet name=systemd dev="sda1" ino=209866103 scontext=system_u:system_r:gravity_container_runtime_t:s0 tcontext=system_u:object_r:gravity_container_init_exec_t:s0 tclass=lnk_file permissive=0
allow gravity_container_runtime_t gravity_container_init_exec_t:lnk_file read;
# type=PROCTITLE msg=audit(09.01.2020 17:25:12.204:77499) : proctitle=/usr/bin/planet agent --name=10_128_0_12.dev.test --rpc-addr=10.128.0.12:7575 --rpc-addr=127.0.0.1:7575 --metrics-addr=10.128.0. ...
# type=SYSCALL msg=audit(09.01.2020 17:25:12.204:77499) : arch=x86_64 syscall=execve success=no exit=EACCES(Permission denied) a0=0xc000bc2500 a1=0xc000562280 a2=0xc00047d8c0 a3=0x0 items=0 ppid=3974 pid=11653 auid=unset uid=root gid=root euid=root suid=root fsuid=root egid=root sgid=root fsgid=root tty=(none) ses=unset comm=planet exe=/usr/bin/planet subj=system_u:system_r:gravity_container_runtime_t:s0 key=(null)
# type=AVC msg=audit(09.01.2020 17:25:12.204:77499) : avc:  denied  { execute } for  pid=11653 comm=planet name=kubelet dev="sda1" ino=209729262 scontext=system_u:system_r:gravity_container_runtime_t:s0 tcontext=system_u:object_r:gravity_kubernetes_exec_t:s0 tclass=file permissive=0
#allow gravity_container_runtime_t gravity_kubernetes_exec_t:file execute;
# type=PROCTITLE msg=audit(09.01.2020 17:24:42.065:77482) : proctitle=/usr/bin/planet agent --name=10_128_0_12.dev.test --rpc-addr=10.128.0.12:7575 --rpc-addr=127.0.0.1:7575 --metrics-addr=10.128.0. ...
# type=SYSCALL msg=audit(09.01.2020 17:24:42.065:77482) : arch=x86_64 syscall=execve success=no exit=EACCES(Permission denied) a0=0xc000852110 a1=0xc0006b2180 a2=0xc0004a9d40 a3=0x0 items=0 ppid=3974 pid=11534 auid=unset uid=root gid=root euid=root suid=root fsuid=root egid=root sgid=root fsgid=root tty=(none) ses=unset comm=planet exe=/usr/bin/planet subj=system_u:system_r:gravity_container_runtime_t:s0 key=(null)
# type=AVC msg=audit(09.01.2020 17:24:42.065:77482) : avc:  denied  { execute } for  pid=11534 comm=planet name=serf dev="sda1" ino=209729251 scontext=system_u:system_r:gravity_container_runtime_t:s0 tcontext=system_u:object_r:gravity_service_exec_t:s0 tclass=file permissive=0
#allow gravity_container_runtime_t gravity_service_exec_t:file execute;
